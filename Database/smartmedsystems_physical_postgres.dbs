<?xml version="1.0" encoding="UTF-8" ?>
<project name="smarmedsystems_logcial_db" id="PostgreSQL-20fc" database="PostgreSQL" >
	<schema name="public" catalogname="smarmedsystems_logcial_db" >
		<table name="appointments" prior="appointment" generator_rows="100" >
			<column name="appointment_id" type="integer" jt="4" mandatory="y" />
			<column name="patient_id" type="uuid" jt="102" mandatory="y" />
			<column name="staff_id" type="uuid" jt="102" mandatory="y" />
			<column name="time_slot_id" type="integer" jt="4" mandatory="y" />
			<column name="status" type="varchar" length="15" jt="12" />
			<index name="pk_appointments" unique="PRIMARY_KEY" >
				<column name="appointment_id" />
			</index>
			<index name="unq_appointment" unique="UNIQUE_KEY" >
				<column name="time_slot_id" />
			</index>
			<index name="idx_appointments_patient_id" unique="NORMAL" >
				<column name="patient_id" />
			</index>
			<index name="idx_appointments_staff_id" unique="NORMAL" >
				<column name="staff_id" />
			</index>
			<fk name="fk_appointment_patient" to_schema="smarmedsystems_logcial_db.public" to_table="patients" delete_action="cascade" update_action="cascade" >
				<fk_column name="patient_id" pk="patient_id" />
			</fk>
			<fk name="fk_appointment_staff" to_schema="smarmedsystems_logcial_db.public" to_table="staff" delete_action="cascade" update_action="cascade" >
				<fk_column name="staff_id" pk="staff_id" />
			</fk>
			<fk name="fk_appointment_time_slot" to_schema="smarmedsystems_logcial_db.public" to_table="time_slots" delete_action="cascade" update_action="cascade" >
				<fk_column name="time_slot_id" pk="time_slot_id" />
			</fk>
		</table>
		<table name="audit_logs" prior="audit_log" generator_rows="150" >
			<column name="log_id" type="integer" jt="4" mandatory="y" />
			<column name="user_id" type="uuid" jt="102" />
			<column name="action" type="varchar" length="100" jt="12" mandatory="y" />
			<column name="timestamp" type="timestamp" jt="93" mandatory="y" />
			<column name="details" type="varchar" jt="12" />
			<index name="pk_audit_log" unique="PRIMARY_KEY" >
				<column name="log_id" />
			</index>
			<index name="idx_audit_logs_user_id" unique="NORMAL" >
				<column name="user_id" />
			</index>
			<fk name="fk_audit_log_users" to_schema="smarmedsystems_logcial_db.public" to_table="users" delete_action="setNull" update_action="cascade" >
				<fk_column name="user_id" pk="user_id" />
			</fk>
		</table>
		<table name="departments" prior="department" generator_rows="100" >
			<column name="department_id" type="integer" jt="4" mandatory="y" />
			<column name="name" type="varchar" length="100" jt="12" mandatory="y" />
			<column name="head_of_department" type="uuid" jt="102" />
			<index name="pk_department" unique="PRIMARY_KEY" >
				<column name="department_id" />
			</index>
			<fk name="fk_departments_staff" to_schema="smarmedsystems_logcial_db.public" to_table="staff" delete_action="cascade" update_action="cascade" >
				<fk_column name="head_of_department" pk="staff_id" />
			</fk>
		</table>
		<table name="messages" generator_rows="150" >
			<column name="message_id" type="integer" jt="4" mandatory="y" />
			<column name="thread_id" type="integer" jt="4" mandatory="y" />
			<column name="user_id" type="uuid" jt="102" mandatory="y" />
			<column name="content" type="text" jt="12" mandatory="y" />
			<column name="sent_at" type="timestamp" jt="93" mandatory="y" />
			<index name="pk_messages" unique="PRIMARY_KEY" >
				<column name="message_id" />
			</index>
			<index name="idx_messages_thread_id" unique="NORMAL" >
				<column name="thread_id" />
			</index>
			<fk name="fk_messages_threads" to_schema="smarmedsystems_logcial_db.public" to_table="threads" delete_action="cascade" update_action="cascade" >
				<fk_column name="thread_id" pk="thread_id" />
			</fk>
			<fk name="fk_messages_users" to_schema="smarmedsystems_logcial_db.public" to_table="users" delete_action="cascade" update_action="cascade" >
				<fk_column name="user_id" pk="user_id" />
			</fk>
		</table>
		<table name="participants" prior="participant" generator_rows="150" >
			<column name="participant_id" type="integer" jt="4" mandatory="y" />
			<column name="thread_id" type="integer" jt="4" mandatory="y" />
			<column name="user_id" type="uuid" jt="102" mandatory="y" />
			<column name="updated_at" type="timestamp" jt="93" />
			<index name="pk_participants" unique="PRIMARY_KEY" >
				<column name="participant_id" />
			</index>
			<index name="idx_participants_thread_id" unique="NORMAL" >
				<column name="thread_id" />
			</index>
			<index name="idx_participants_user_id" unique="NORMAL" >
				<column name="user_id" />
			</index>
			<fk name="fk_participant_threads" to_schema="smarmedsystems_logcial_db.public" to_table="threads" delete_action="cascade" update_action="cascade" >
				<fk_column name="thread_id" pk="thread_id" />
			</fk>
			<fk name="fk_participant_user" to_schema="smarmedsystems_logcial_db.public" to_table="users" delete_action="cascade" update_action="cascade" >
				<fk_column name="user_id" pk="user_id" />
			</fk>
		</table>
		<table name="patients" prior="patient" generator_rows="150" >
			<column name="patient_id" type="uuid" jt="102" mandatory="y" />
			<column name="user_id" type="uuid" jt="102" />
			<column name="primary_provider_id" type="uuid" jt="102" />
			<column name="date_of_birth" type="date" jt="91" mandatory="y" />
			<column name="gender" type="varchar" jt="12" mandatory="y" />
			<column name="blood_type" type="varchar" jt="12" mandatory="y" />
			<column name="insurance_provider" type="varchar" jt="12" />
			<index name="pk_patient" unique="PRIMARY_KEY" >
				<column name="patient_id" />
			</index>
			<fk name="fk_patient_users" to_schema="smarmedsystems_logcial_db.public" to_table="users" delete_action="cascade" update_action="cascade" >
				<fk_column name="user_id" pk="user_id" />
			</fk>
			<fk name="fk_patient_staff" to_schema="smarmedsystems_logcial_db.public" to_table="staff" delete_action="cascade" update_action="cascade" >
				<fk_column name="primary_provider_id" pk="staff_id" />
			</fk>
		</table>
		<table name="permissions" generator_rows="100" >
			<column name="permission_id" type="integer" jt="4" mandatory="y" />
			<column name="scope" type="varchar" length="100" jt="12" mandatory="y" />
			<column name="action" type="varchar" length="100" jt="12" mandatory="y" />
			<index name="pk_permissions" unique="PRIMARY_KEY" >
				<column name="permission_id" />
			</index>
		</table>
		<table name="role_permissions" generator_rows="225" >
			<column name="role_id" type="integer" jt="4" mandatory="y" />
			<column name="permission_id" type="integer" jt="4" mandatory="y" />
			<column name="created_at" type="timestamp" jt="93" mandatory="y" />
			<column name="last_updated" type="timestamp" jt="93" />
			<index name="pk_role_permissions" unique="PRIMARY_KEY" >
				<column name="role_id" />
				<column name="permission_id" />
			</index>
			<fk name="fk_role_permissions_roles" to_schema="smarmedsystems_logcial_db.public" to_table="roles" delete_action="cascade" update_action="cascade" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
			<fk name="fk_role_permissions_permissions" to_schema="smarmedsystems_logcial_db.public" to_table="permissions" delete_action="cascade" update_action="cascade" >
				<fk_column name="permission_id" pk="permission_id" />
			</fk>
		</table>
		<table name="roles" prior="role" generator_rows="150" >
			<column name="role_id" type="integer" jt="4" mandatory="y" />
			<column name="parent_role_id" type="integer" jt="4" />
			<column name="role_name" type="varchar" length="50" jt="12" mandatory="y" />
			<column name="description" type="varchar" jt="12" />
			<index name="pk_role" unique="PRIMARY_KEY" >
				<column name="role_id" />
			</index>
			<fk name="fk_roles_roles" to_schema="smarmedsystems_logcial_db.public" to_table="roles" delete_action="setNull" update_action="cascade" >
				<fk_column name="parent_role_id" pk="role_id" />
			</fk>
		</table>
		<table name="schedules" prior="schedule" generator_rows="100" >
			<column name="schedule_id" type="integer" jt="4" mandatory="y" />
			<column name="staff_id" type="uuid" jt="102" mandatory="y" />
			<column name="start_time" type="timestamp" jt="93" mandatory="y" />
			<column name="end_time" type="timestamp" jt="93" mandatory="y" />
			<index name="pk_schedule" unique="PRIMARY_KEY" >
				<column name="schedule_id" />
			</index>
			<fk name="fk_schedule_staff" to_schema="smarmedsystems_logcial_db.public" to_table="staff" delete_action="cascade" update_action="cascade" >
				<fk_column name="staff_id" pk="staff_id" />
			</fk>
		</table>
		<table name="staff" generator_rows="150" >
			<column name="staff_id" type="uuid" jt="102" mandatory="y" />
			<column name="user_id" type="uuid" jt="102" mandatory="y" />
			<column name="department_id" type="integer" jt="4" />
			<column name="specialization" type="varchar" jt="12" />
			<column name="hire_date" type="date" jt="91" />
			<index name="pk_employee" unique="PRIMARY_KEY" >
				<column name="staff_id" />
			</index>
			<index name="idx_staff_department_id" unique="NORMAL" >
				<column name="department_id" />
			</index>
			<fk name="fk_staff_department" to_schema="smarmedsystems_logcial_db.public" to_table="departments" delete_action="restrict" update_action="cascade" >
				<fk_column name="department_id" pk="department_id" />
			</fk>
			<fk name="fk_staff_users" to_schema="smarmedsystems_logcial_db.public" to_table="users" delete_action="cascade" update_action="cascade" >
				<fk_column name="user_id" pk="user_id" />
			</fk>
		</table>
		<table name="threads" generator_rows="100" >
			<column name="thread_id" type="integer" jt="4" mandatory="y" />
			<column name="subject" type="varchar" jt="12" mandatory="y" />
			<column name="created_at" type="timestamp" jt="93" mandatory="y" />
			<column name="updated_at" type="timestamp" jt="93" />
			<index name="pk_threads" unique="PRIMARY_KEY" >
				<column name="thread_id" />
			</index>
		</table>
		<table name="time_slots" prior="time_slot" generator_rows="150" >
			<column name="time_slot_id" type="integer" jt="4" mandatory="y" />
			<column name="schedule_id" type="integer" jt="4" mandatory="y" />
			<column name="start_time" type="timestamp" jt="93" mandatory="y" />
			<column name="end_time" type="timestamp" jt="93" mandatory="y" />
			<column name="status" type="varchar" jt="12" />
			<index name="pk_time_slot" unique="PRIMARY_KEY" >
				<column name="time_slot_id" />
			</index>
			<index name="idx_time_slots_schedule_id" unique="NORMAL" >
				<column name="schedule_id" />
			</index>
			<constraint name="chk_valid_timespan" >
				<string><![CDATA[end_time > start_time]]></string>
			</constraint>
			<fk name="fk_time_slot_schedule" to_schema="smarmedsystems_logcial_db.public" to_table="schedules" delete_action="cascade" update_action="cascade" >
				<fk_column name="schedule_id" pk="schedule_id" />
			</fk>
		</table>
		<table name="user_permissions" generator_rows="150" >
			<column name="user_id" type="uuid" jt="102" mandatory="y" />
			<column name="permission_id" type="integer" jt="4" mandatory="y" />
			<column name="is_allowed" type="boolean" jt="16" mandatory="y" />
			<column name="is_denied" type="boolean" jt="16" mandatory="y" />
			<index name="pk_user_permissions" unique="PRIMARY_KEY" >
				<column name="user_id" />
				<column name="permission_id" />
			</index>
			<fk name="fk_user_permissions_permissions" to_schema="smarmedsystems_logcial_db.public" to_table="permissions" delete_action="cascade" update_action="cascade" >
				<fk_column name="permission_id" pk="permission_id" />
			</fk>
			<fk name="fk_user_permissions_users" to_schema="smarmedsystems_logcial_db.public" to_table="users" delete_action="cascade" update_action="cascade" >
				<fk_column name="user_id" pk="user_id" />
			</fk>
		</table>
		<table name="user_role" generator_rows="225" >
			<column name="role_id" type="integer" jt="4" mandatory="y" />
			<column name="user_id" type="uuid" jt="102" mandatory="y" />
			<column name="created_at" type="timestamp" jt="93" mandatory="y" />
			<column name="last_updated" type="timestamp" jt="93" />
			<index name="pk_user_role" unique="PRIMARY_KEY" >
				<column name="role_id" />
				<column name="user_id" />
			</index>
			<fk name="fk_user_role_users" to_schema="smarmedsystems_logcial_db.public" to_table="users" delete_action="cascade" update_action="cascade" >
				<fk_column name="user_id" pk="user_id" />
			</fk>
			<fk name="fk_user_role_roles" to_schema="smarmedsystems_logcial_db.public" to_table="roles" delete_action="cascade" update_action="cascade" >
				<fk_column name="role_id" pk="role_id" />
			</fk>
		</table>
		<table name="users" prior="user" generator_rows="100" >
			<column name="user_id" type="uuid" jt="102" mandatory="y" />
			<column name="first_name" type="varchar" length="50" jt="12" mandatory="y" />
			<column name="last_name" type="varchar" length="50" jt="12" mandatory="y" />
			<column name="email" type="varchar" jt="12" mandatory="y" />
			<column name="phone_number" type="text" jt="12" mandatory="y" />
			<column name="password_hash" type="text" jt="12" mandatory="y" >
				<comment><![CDATA[Securely hashed password]]></comment>
			</column>
			<column name="created_at" type="timestamp" jt="93" mandatory="y" />
			<index name="pk_user" unique="PRIMARY_KEY" >
				<column name="user_id" />
			</index>
		</table>
	</schema>
	<layout name="Default Layout" id="Layout-1fc1" confirmed="y" show_relation="columns" >
		<entity schema="smarmedsystems_logcial_db.public" name="appointments" color="C1D8EE" x="480" y="864" />
		<entity schema="smarmedsystems_logcial_db.public" name="audit_logs" color="C1D8EE" x="736" y="288" />
		<entity schema="smarmedsystems_logcial_db.public" name="departments" color="C1D8EE" x="960" y="624" />
		<entity schema="smarmedsystems_logcial_db.public" name="messages" color="C1D8EE" x="304" y="288" />
		<entity schema="smarmedsystems_logcial_db.public" name="participants" color="C1D8EE" x="304" y="592" />
		<entity schema="smarmedsystems_logcial_db.public" name="patients" color="C1D8EE" x="496" y="624" />
		<entity schema="smarmedsystems_logcial_db.public" name="permissions" color="C1D8EE" x="752" y="176" />
		<entity schema="smarmedsystems_logcial_db.public" name="role_permissions" color="C1D8EE" x="976" y="272" />
		<entity schema="smarmedsystems_logcial_db.public" name="roles" color="C1D8EE" x="960" y="464" />
		<entity schema="smarmedsystems_logcial_db.public" name="schedules" color="C1D8EE" x="1024" y="848" />
		<entity schema="smarmedsystems_logcial_db.public" name="staff" color="C1D8EE" x="736" y="640" />
		<entity schema="smarmedsystems_logcial_db.public" name="threads" color="C1D8EE" x="160" y="448" />
		<entity schema="smarmedsystems_logcial_db.public" name="time_slots" color="C1D8EE" x="736" y="864" />
		<entity schema="smarmedsystems_logcial_db.public" name="user_permissions" color="C1D8EE" x="512" y="224" />
		<entity schema="smarmedsystems_logcial_db.public" name="user_role" color="C1D8EE" x="736" y="448" />
		<entity schema="smarmedsystems_logcial_db.public" name="users" color="C1D8EE" x="512" y="416" />
		<callout x="48" y="48" pointer="Round" >
			<comment><![CDATA[This is a layout - a diagram with tools.
- Create new entities by right-clicking the layout. 
- Double-click entity headers to edit.
- For a better understanding of the schema, create multiple layouts.
- Deploy the model into the database by converting it first to the physical design.]]></comment>
		</callout>
		<script name="SQL_Editor" id="Editor-893" language="SQL" >
			<string><![CDATA[CREATE SCHEMA IF NOT EXISTS "public";

CREATE  TABLE "public".permissions ( 
	permission_id        integer  NOT NULL  ,
	"scope"              varchar(100)  NOT NULL  ,
	"action"             varchar(100)  NOT NULL  ,
	CONSTRAINT pk_permissions PRIMARY KEY ( permission_id )
 );

CREATE  TABLE "public".roles ( 
	role_id              integer  NOT NULL  ,
	parent_role_id       integer    ,
	role_name            varchar(50)  NOT NULL  ,
	description          varchar    ,
	CONSTRAINT pk_role PRIMARY KEY ( role_id )
 );

CREATE  TABLE "public".threads ( 
	thread_id            integer  NOT NULL  ,
	subject              varchar  NOT NULL  ,
	created_at           timestamp  NOT NULL  ,
	updated_at           timestamp    ,
	CONSTRAINT pk_threads PRIMARY KEY ( thread_id )
 );

CREATE  TABLE "public".users ( 
	user_id              uuid  NOT NULL  ,
	first_name           varchar(50)  NOT NULL  ,
	last_name            varchar(50)  NOT NULL  ,
	email                varchar  NOT NULL  ,
	phone_number         text  NOT NULL  ,
	password_hash        text  NOT NULL  ,
	created_at           timestamp  NOT NULL  ,
	CONSTRAINT pk_user PRIMARY KEY ( user_id )
 );

CREATE  TABLE "public".audit_logs ( 
	log_id               integer  NOT NULL  ,
	user_id              uuid    ,
	"action"             varchar(100)  NOT NULL  ,
	"timestamp"          timestamp  NOT NULL  ,
	details              varchar    ,
	CONSTRAINT pk_audit_log PRIMARY KEY ( log_id )
 );

CREATE INDEX idx_audit_logs_user_id ON "public".audit_logs  ( user_id );

CREATE  TABLE "public".messages ( 
	message_id           integer  NOT NULL  ,
	thread_id            integer  NOT NULL  ,
	user_id              uuid  NOT NULL  ,
	content              text  NOT NULL  ,
	sent_at              timestamp  NOT NULL  ,
	CONSTRAINT pk_messages PRIMARY KEY ( message_id )
 );

CREATE INDEX idx_messages_thread_id ON "public".messages  ( thread_id );

CREATE  TABLE "public".participants ( 
	participant_id       integer  NOT NULL  ,
	thread_id            integer  NOT NULL  ,
	user_id              uuid  NOT NULL  ,
	updated_at           timestamp    ,
	CONSTRAINT pk_participants PRIMARY KEY ( participant_id )
 );

CREATE INDEX idx_participants_thread_id ON "public".participants  ( thread_id );

CREATE INDEX idx_participants_user_id ON "public".participants  ( user_id );

CREATE  TABLE "public".role_permissions ( 
	role_id              integer  NOT NULL  ,
	permission_id        integer  NOT NULL  ,
	created_at           timestamp  NOT NULL  ,
	last_updated         timestamp    ,
	CONSTRAINT pk_role_permissions PRIMARY KEY ( role_id, permission_id )
 );

CREATE  TABLE "public".user_permissions ( 
	user_id              uuid  NOT NULL  ,
	permission_id        integer  NOT NULL  ,
	is_allowed           boolean  NOT NULL  ,
	is_denied            boolean  NOT NULL  ,
	CONSTRAINT pk_user_permissions PRIMARY KEY ( user_id, permission_id )
 );

CREATE  TABLE "public".user_role ( 
	role_id              integer  NOT NULL  ,
	user_id              uuid  NOT NULL  ,
	created_at           timestamp  NOT NULL  ,
	last_updated         timestamp    ,
	CONSTRAINT pk_user_role PRIMARY KEY ( role_id, user_id )
 );

CREATE  TABLE "public".appointments ( 
	appointment_id       integer  NOT NULL  ,
	patient_id           integer  NOT NULL  ,
	staff_id             integer  NOT NULL  ,
	time_slot_id         integer  NOT NULL  ,
	status               varchar(15)    ,
	CONSTRAINT pk_appointments PRIMARY KEY ( appointment_id ),
	CONSTRAINT unq_appointment UNIQUE ( time_slot_id ) 
 );

CREATE INDEX idx_appointments_patient_id ON "public".appointments  ( patient_id );

CREATE INDEX idx_appointments_staff_id ON "public".appointments  ( staff_id );

CREATE  TABLE "public".departments ( 
	department_id        integer  NOT NULL  ,
	name                 varchar(100)  NOT NULL  ,
	head_of_department   integer    ,
	CONSTRAINT pk_department PRIMARY KEY ( department_id )
 );

CREATE  TABLE "public".patients ( 
	patient_id           integer  NOT NULL  ,
	user_id              uuid    ,
	primary_provider_id  integer  NOT NULL  ,
	date_of_birth        date  NOT NULL  ,
	gender               varchar  NOT NULL  ,
	blood_type           varchar  NOT NULL  ,
	insurance_provider   varchar    ,
	CONSTRAINT pk_patient PRIMARY KEY ( patient_id )
 );

CREATE  TABLE "public".schedules ( 
	schedule_id          integer  NOT NULL  ,
	staff_id             integer  NOT NULL  ,
	start_time           timestamp  NOT NULL  ,
	end_time             timestamp  NOT NULL  ,
	CONSTRAINT pk_schedule PRIMARY KEY ( schedule_id )
 );

CREATE  TABLE "public".staff ( 
	staff_id             integer  NOT NULL  ,
	user_id              uuid  NOT NULL  ,
	department_id        integer    ,
	specialization       varchar    ,
	hire_date            date    ,
	CONSTRAINT pk_employee PRIMARY KEY ( staff_id )
 );

CREATE INDEX idx_staff_department_id ON "public".staff  ( department_id );

CREATE  TABLE "public".time_slots ( 
	time_slot_id         integer  NOT NULL  ,
	schedule_id          integer  NOT NULL  ,
	start_time           timestamp  NOT NULL  ,
	end_time             timestamp  NOT NULL  ,
	status               varchar    ,
	CONSTRAINT pk_time_slot PRIMARY KEY ( time_slot_id )
 );

ALTER TABLE "public".time_slots ADD CONSTRAINT chk_valid_timespan CHECK ( end_time > start_time );

CREATE INDEX idx_time_slots_schedule_id ON "public".time_slots  ( schedule_id );

ALTER TABLE "public".appointments ADD CONSTRAINT fk_appointment_patient FOREIGN KEY ( patient_id ) REFERENCES "public".patients( patient_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".appointments ADD CONSTRAINT fk_appointment_staff FOREIGN KEY ( staff_id ) REFERENCES "public".staff( staff_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".appointments ADD CONSTRAINT fk_appointment_time_slot FOREIGN KEY ( time_slot_id ) REFERENCES "public".time_slots( time_slot_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".audit_logs ADD CONSTRAINT fk_audit_log_users FOREIGN KEY ( user_id ) REFERENCES "public".users( user_id ) ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE "public".departments ADD CONSTRAINT fk_departments_staff FOREIGN KEY ( head_of_department ) REFERENCES "public".staff( staff_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".messages ADD CONSTRAINT fk_messages_threads FOREIGN KEY ( thread_id ) REFERENCES "public".threads( thread_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".messages ADD CONSTRAINT fk_messages_users FOREIGN KEY ( user_id ) REFERENCES "public".users( user_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".participants ADD CONSTRAINT fk_participant_threads FOREIGN KEY ( thread_id ) REFERENCES "public".threads( thread_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".participants ADD CONSTRAINT fk_participant_user FOREIGN KEY ( user_id ) REFERENCES "public".users( user_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".patients ADD CONSTRAINT fk_patient_users FOREIGN KEY ( user_id ) REFERENCES "public".users( user_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".patients ADD CONSTRAINT fk_patient_staff FOREIGN KEY ( primary_provider_id ) REFERENCES "public".staff( staff_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".role_permissions ADD CONSTRAINT fk_role_permissions_roles FOREIGN KEY ( role_id ) REFERENCES "public".roles( role_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".role_permissions ADD CONSTRAINT fk_role_permissions_permissions FOREIGN KEY ( permission_id ) REFERENCES "public".permissions( permission_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".roles ADD CONSTRAINT fk_roles_roles FOREIGN KEY ( parent_role_id ) REFERENCES "public".roles( role_id ) ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE "public".schedules ADD CONSTRAINT fk_schedule_staff FOREIGN KEY ( staff_id ) REFERENCES "public".staff( staff_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".staff ADD CONSTRAINT fk_staff_department FOREIGN KEY ( department_id ) REFERENCES "public".departments( department_id ) ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE "public".staff ADD CONSTRAINT fk_staff_users FOREIGN KEY ( user_id ) REFERENCES "public".users( user_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".time_slots ADD CONSTRAINT fk_time_slot_schedule FOREIGN KEY ( schedule_id ) REFERENCES "public".schedules( schedule_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".user_permissions ADD CONSTRAINT fk_user_permissions_permissions FOREIGN KEY ( permission_id ) REFERENCES "public".permissions( permission_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".user_permissions ADD CONSTRAINT fk_user_permissions_users FOREIGN KEY ( user_id ) REFERENCES "public".users( user_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".user_role ADD CONSTRAINT fk_user_role_users FOREIGN KEY ( user_id ) REFERENCES "public".users( user_id ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE "public".user_role ADD CONSTRAINT fk_user_role_roles FOREIGN KEY ( role_id ) REFERENCES "public".roles( role_id ) ON DELETE CASCADE ON UPDATE CASCADE;

COMMENT ON COLUMN "public".users.password_hash IS 'Securely hashed password';
]]></string>
		</script>
	</layout>
</project>